buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.5"
    }
}
plugins {
    id 'java'
    id 'idea'
    id "net.serenity-bdd.serenity-gradle-plugin" version "3.3.4"
    id "net.gradleutil.gradle-conf" version "1.1.15"
}
defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

ext {
    slf4jVersion = '1.7.25'
    serenityCoreVersion = '3.3.4'
    serenityCucumberVersion = '3.3.4'
    junitVersion = '5.9.1'
}

wrapper {
    gradleVersion '7.4'
    distributionType Wrapper.DistributionType.ALL
}

dependencies {
    implementation group: 'log4j',name: 'log4j',version: '1.2.17'
    implementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'
    implementation (
            "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",

            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.slf4j:slf4j-api:${slf4jVersion}"
    )

    testImplementation(
            "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    )

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

serenity {

    //reports = ["single-page-html"]

    // Specify the root package of any JUnit acceptance tests
    //testRoot="co.com.sofkasura"

    // Specify the root directory of any Cucumber feature files
    //requirementsDir = "src/test/resources/features/arrendamiento"
    requirementsBaseDir = "src/test/resources/features/"
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)